// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "PAppSession.pb.h"
// @@protoc_insertion_point(imports)

@implementation PappSessionRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [PappSessionRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PAppSession ()
@property (strong) NSString* sessionId;
@property (strong) NSString* realName;
@property (strong) NSString* userName;
@property SInt64 userId;
@property (strong) NSString* secret;
@property (strong) NSString* signinDate;
@property (strong) NSString* profileImageUrl;
@property (strong) NSString* appName;
@property (strong) NSString* deviceName;
@property (strong) NSString* deviceScreenSize;
@property (strong) NSString* osName;
@property (strong) NSString* osVersion;
@property (strong) NSString* packageVersion;
@property (strong) NSString* packageName;
@property (strong) NSString* deviceId;
@property (strong) NSString* deviceToken;
@property SInt32 apnsEnabled;
@property (strong) NSString* latesAppVers;
@property (strong) NSString* localeIdentifier;
@property Float32 latitude;
@property Float32 longitude;
@property SInt32 cityId;
@property SInt32 userKind;
@property SInt32 userDemo;
@end

@implementation PAppSession

- (BOOL) hasSessionId {
  return !!hasSessionId_;
}
- (void) setHasSessionId:(BOOL) _value_ {
  hasSessionId_ = !!_value_;
}
@synthesize sessionId;
- (BOOL) hasRealName {
  return !!hasRealName_;
}
- (void) setHasRealName:(BOOL) _value_ {
  hasRealName_ = !!_value_;
}
@synthesize realName;
- (BOOL) hasUserName {
  return !!hasUserName_;
}
- (void) setHasUserName:(BOOL) _value_ {
  hasUserName_ = !!_value_;
}
@synthesize userName;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasSecret {
  return !!hasSecret_;
}
- (void) setHasSecret:(BOOL) _value_ {
  hasSecret_ = !!_value_;
}
@synthesize secret;
- (BOOL) hasSigninDate {
  return !!hasSigninDate_;
}
- (void) setHasSigninDate:(BOOL) _value_ {
  hasSigninDate_ = !!_value_;
}
@synthesize signinDate;
- (BOOL) hasProfileImageUrl {
  return !!hasProfileImageUrl_;
}
- (void) setHasProfileImageUrl:(BOOL) _value_ {
  hasProfileImageUrl_ = !!_value_;
}
@synthesize profileImageUrl;
- (BOOL) hasAppName {
  return !!hasAppName_;
}
- (void) setHasAppName:(BOOL) _value_ {
  hasAppName_ = !!_value_;
}
@synthesize appName;
- (BOOL) hasDeviceName {
  return !!hasDeviceName_;
}
- (void) setHasDeviceName:(BOOL) _value_ {
  hasDeviceName_ = !!_value_;
}
@synthesize deviceName;
- (BOOL) hasDeviceScreenSize {
  return !!hasDeviceScreenSize_;
}
- (void) setHasDeviceScreenSize:(BOOL) _value_ {
  hasDeviceScreenSize_ = !!_value_;
}
@synthesize deviceScreenSize;
- (BOOL) hasOsName {
  return !!hasOsName_;
}
- (void) setHasOsName:(BOOL) _value_ {
  hasOsName_ = !!_value_;
}
@synthesize osName;
- (BOOL) hasOsVersion {
  return !!hasOsVersion_;
}
- (void) setHasOsVersion:(BOOL) _value_ {
  hasOsVersion_ = !!_value_;
}
@synthesize osVersion;
- (BOOL) hasPackageVersion {
  return !!hasPackageVersion_;
}
- (void) setHasPackageVersion:(BOOL) _value_ {
  hasPackageVersion_ = !!_value_;
}
@synthesize packageVersion;
- (BOOL) hasPackageName {
  return !!hasPackageName_;
}
- (void) setHasPackageName:(BOOL) _value_ {
  hasPackageName_ = !!_value_;
}
@synthesize packageName;
- (BOOL) hasDeviceId {
  return !!hasDeviceId_;
}
- (void) setHasDeviceId:(BOOL) _value_ {
  hasDeviceId_ = !!_value_;
}
@synthesize deviceId;
- (BOOL) hasDeviceToken {
  return !!hasDeviceToken_;
}
- (void) setHasDeviceToken:(BOOL) _value_ {
  hasDeviceToken_ = !!_value_;
}
@synthesize deviceToken;
- (BOOL) hasApnsEnabled {
  return !!hasApnsEnabled_;
}
- (void) setHasApnsEnabled:(BOOL) _value_ {
  hasApnsEnabled_ = !!_value_;
}
@synthesize apnsEnabled;
- (BOOL) hasLatesAppVers {
  return !!hasLatesAppVers_;
}
- (void) setHasLatesAppVers:(BOOL) _value_ {
  hasLatesAppVers_ = !!_value_;
}
@synthesize latesAppVers;
- (BOOL) hasLocaleIdentifier {
  return !!hasLocaleIdentifier_;
}
- (void) setHasLocaleIdentifier:(BOOL) _value_ {
  hasLocaleIdentifier_ = !!_value_;
}
@synthesize localeIdentifier;
- (BOOL) hasLatitude {
  return !!hasLatitude_;
}
- (void) setHasLatitude:(BOOL) _value_ {
  hasLatitude_ = !!_value_;
}
@synthesize latitude;
- (BOOL) hasLongitude {
  return !!hasLongitude_;
}
- (void) setHasLongitude:(BOOL) _value_ {
  hasLongitude_ = !!_value_;
}
@synthesize longitude;
- (BOOL) hasCityId {
  return !!hasCityId_;
}
- (void) setHasCityId:(BOOL) _value_ {
  hasCityId_ = !!_value_;
}
@synthesize cityId;
- (BOOL) hasUserKind {
  return !!hasUserKind_;
}
- (void) setHasUserKind:(BOOL) _value_ {
  hasUserKind_ = !!_value_;
}
@synthesize userKind;
- (BOOL) hasUserDemo {
  return !!hasUserDemo_;
}
- (void) setHasUserDemo:(BOOL) _value_ {
  hasUserDemo_ = !!_value_;
}
@synthesize userDemo;
- (instancetype) init {
  if ((self = [super init])) {
    self.sessionId = @"";
    self.realName = @"";
    self.userName = @"";
    self.userId = 0L;
    self.secret = @"";
    self.signinDate = @"";
    self.profileImageUrl = @"";
    self.appName = @"";
    self.deviceName = @"";
    self.deviceScreenSize = @"";
    self.osName = @"";
    self.osVersion = @"";
    self.packageVersion = @"";
    self.packageName = @"";
    self.deviceId = @"";
    self.deviceToken = @"";
    self.apnsEnabled = 0;
    self.latesAppVers = @"";
    self.localeIdentifier = @"";
    self.latitude = 0;
    self.longitude = 0;
    self.cityId = 0;
    self.userKind = 0;
    self.userDemo = 0;
  }
  return self;
}
static PAppSession* defaultPAppSessionInstance = nil;
+ (void) initialize {
  if (self == [PAppSession class]) {
    defaultPAppSessionInstance = [[PAppSession alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPAppSessionInstance;
}
- (instancetype) defaultInstance {
  return defaultPAppSessionInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSessionId) {
    [output writeString:1 value:self.sessionId];
  }
  if (self.hasRealName) {
    [output writeString:2 value:self.realName];
  }
  if (self.hasUserName) {
    [output writeString:3 value:self.userName];
  }
  if (self.hasUserId) {
    [output writeInt64:4 value:self.userId];
  }
  if (self.hasSecret) {
    [output writeString:5 value:self.secret];
  }
  if (self.hasSigninDate) {
    [output writeString:6 value:self.signinDate];
  }
  if (self.hasProfileImageUrl) {
    [output writeString:7 value:self.profileImageUrl];
  }
  if (self.hasAppName) {
    [output writeString:8 value:self.appName];
  }
  if (self.hasDeviceName) {
    [output writeString:9 value:self.deviceName];
  }
  if (self.hasDeviceScreenSize) {
    [output writeString:10 value:self.deviceScreenSize];
  }
  if (self.hasOsName) {
    [output writeString:11 value:self.osName];
  }
  if (self.hasOsVersion) {
    [output writeString:12 value:self.osVersion];
  }
  if (self.hasPackageVersion) {
    [output writeString:13 value:self.packageVersion];
  }
  if (self.hasPackageName) {
    [output writeString:14 value:self.packageName];
  }
  if (self.hasDeviceId) {
    [output writeString:15 value:self.deviceId];
  }
  if (self.hasDeviceToken) {
    [output writeString:16 value:self.deviceToken];
  }
  if (self.hasApnsEnabled) {
    [output writeInt32:17 value:self.apnsEnabled];
  }
  if (self.hasLatesAppVers) {
    [output writeString:18 value:self.latesAppVers];
  }
  if (self.hasLocaleIdentifier) {
    [output writeString:19 value:self.localeIdentifier];
  }
  if (self.hasLatitude) {
    [output writeFloat:20 value:self.latitude];
  }
  if (self.hasLongitude) {
    [output writeFloat:21 value:self.longitude];
  }
  if (self.hasCityId) {
    [output writeInt32:22 value:self.cityId];
  }
  if (self.hasUserKind) {
    [output writeInt32:23 value:self.userKind];
  }
  if (self.hasUserDemo) {
    [output writeInt32:24 value:self.userDemo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSessionId) {
    size_ += computeStringSize(1, self.sessionId);
  }
  if (self.hasRealName) {
    size_ += computeStringSize(2, self.realName);
  }
  if (self.hasUserName) {
    size_ += computeStringSize(3, self.userName);
  }
  if (self.hasUserId) {
    size_ += computeInt64Size(4, self.userId);
  }
  if (self.hasSecret) {
    size_ += computeStringSize(5, self.secret);
  }
  if (self.hasSigninDate) {
    size_ += computeStringSize(6, self.signinDate);
  }
  if (self.hasProfileImageUrl) {
    size_ += computeStringSize(7, self.profileImageUrl);
  }
  if (self.hasAppName) {
    size_ += computeStringSize(8, self.appName);
  }
  if (self.hasDeviceName) {
    size_ += computeStringSize(9, self.deviceName);
  }
  if (self.hasDeviceScreenSize) {
    size_ += computeStringSize(10, self.deviceScreenSize);
  }
  if (self.hasOsName) {
    size_ += computeStringSize(11, self.osName);
  }
  if (self.hasOsVersion) {
    size_ += computeStringSize(12, self.osVersion);
  }
  if (self.hasPackageVersion) {
    size_ += computeStringSize(13, self.packageVersion);
  }
  if (self.hasPackageName) {
    size_ += computeStringSize(14, self.packageName);
  }
  if (self.hasDeviceId) {
    size_ += computeStringSize(15, self.deviceId);
  }
  if (self.hasDeviceToken) {
    size_ += computeStringSize(16, self.deviceToken);
  }
  if (self.hasApnsEnabled) {
    size_ += computeInt32Size(17, self.apnsEnabled);
  }
  if (self.hasLatesAppVers) {
    size_ += computeStringSize(18, self.latesAppVers);
  }
  if (self.hasLocaleIdentifier) {
    size_ += computeStringSize(19, self.localeIdentifier);
  }
  if (self.hasLatitude) {
    size_ += computeFloatSize(20, self.latitude);
  }
  if (self.hasLongitude) {
    size_ += computeFloatSize(21, self.longitude);
  }
  if (self.hasCityId) {
    size_ += computeInt32Size(22, self.cityId);
  }
  if (self.hasUserKind) {
    size_ += computeInt32Size(23, self.userKind);
  }
  if (self.hasUserDemo) {
    size_ += computeInt32Size(24, self.userDemo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PAppSession*) parseFromData:(NSData*) data {
  return (PAppSession*)[[[PAppSession builder] mergeFromData:data] build];
}
+ (PAppSession*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PAppSession*)[[[PAppSession builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PAppSession*) parseFromInputStream:(NSInputStream*) input {
  return (PAppSession*)[[[PAppSession builder] mergeFromInputStream:input] build];
}
+ (PAppSession*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PAppSession*)[[[PAppSession builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PAppSession*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PAppSession*)[[[PAppSession builder] mergeFromCodedInputStream:input] build];
}
+ (PAppSession*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PAppSession*)[[[PAppSession builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PAppSessionBuilder*) builder {
  return [[PAppSessionBuilder alloc] init];
}
+ (PAppSessionBuilder*) builderWithPrototype:(PAppSession*) prototype {
  return [[PAppSession builder] mergeFrom:prototype];
}
- (PAppSessionBuilder*) builder {
  return [PAppSession builder];
}
- (PAppSessionBuilder*) toBuilder {
  return [PAppSession builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSessionId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sessionId", self.sessionId];
  }
  if (self.hasRealName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"realName", self.realName];
  }
  if (self.hasUserName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userName", self.userName];
  }
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithLongLong:self.userId]];
  }
  if (self.hasSecret) {
    [output appendFormat:@"%@%@: %@\n", indent, @"secret", self.secret];
  }
  if (self.hasSigninDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"signinDate", self.signinDate];
  }
  if (self.hasProfileImageUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"profileImageUrl", self.profileImageUrl];
  }
  if (self.hasAppName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"appName", self.appName];
  }
  if (self.hasDeviceName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deviceName", self.deviceName];
  }
  if (self.hasDeviceScreenSize) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deviceScreenSize", self.deviceScreenSize];
  }
  if (self.hasOsName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"osName", self.osName];
  }
  if (self.hasOsVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"osVersion", self.osVersion];
  }
  if (self.hasPackageVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"packageVersion", self.packageVersion];
  }
  if (self.hasPackageName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"packageName", self.packageName];
  }
  if (self.hasDeviceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deviceId", self.deviceId];
  }
  if (self.hasDeviceToken) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deviceToken", self.deviceToken];
  }
  if (self.hasApnsEnabled) {
    [output appendFormat:@"%@%@: %@\n", indent, @"apnsEnabled", [NSNumber numberWithInteger:self.apnsEnabled]];
  }
  if (self.hasLatesAppVers) {
    [output appendFormat:@"%@%@: %@\n", indent, @"latesAppVers", self.latesAppVers];
  }
  if (self.hasLocaleIdentifier) {
    [output appendFormat:@"%@%@: %@\n", indent, @"localeIdentifier", self.localeIdentifier];
  }
  if (self.hasLatitude) {
    [output appendFormat:@"%@%@: %@\n", indent, @"latitude", [NSNumber numberWithFloat:self.latitude]];
  }
  if (self.hasLongitude) {
    [output appendFormat:@"%@%@: %@\n", indent, @"longitude", [NSNumber numberWithFloat:self.longitude]];
  }
  if (self.hasCityId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cityId", [NSNumber numberWithInteger:self.cityId]];
  }
  if (self.hasUserKind) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userKind", [NSNumber numberWithInteger:self.userKind]];
  }
  if (self.hasUserDemo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userDemo", [NSNumber numberWithInteger:self.userDemo]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasSessionId) {
    [dictionary setObject: self.sessionId forKey: @"sessionId"];
  }
  if (self.hasRealName) {
    [dictionary setObject: self.realName forKey: @"realName"];
  }
  if (self.hasUserName) {
    [dictionary setObject: self.userName forKey: @"userName"];
  }
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.userId] forKey: @"userId"];
  }
  if (self.hasSecret) {
    [dictionary setObject: self.secret forKey: @"secret"];
  }
  if (self.hasSigninDate) {
    [dictionary setObject: self.signinDate forKey: @"signinDate"];
  }
  if (self.hasProfileImageUrl) {
    [dictionary setObject: self.profileImageUrl forKey: @"profileImageUrl"];
  }
  if (self.hasAppName) {
    [dictionary setObject: self.appName forKey: @"appName"];
  }
  if (self.hasDeviceName) {
    [dictionary setObject: self.deviceName forKey: @"deviceName"];
  }
  if (self.hasDeviceScreenSize) {
    [dictionary setObject: self.deviceScreenSize forKey: @"deviceScreenSize"];
  }
  if (self.hasOsName) {
    [dictionary setObject: self.osName forKey: @"osName"];
  }
  if (self.hasOsVersion) {
    [dictionary setObject: self.osVersion forKey: @"osVersion"];
  }
  if (self.hasPackageVersion) {
    [dictionary setObject: self.packageVersion forKey: @"packageVersion"];
  }
  if (self.hasPackageName) {
    [dictionary setObject: self.packageName forKey: @"packageName"];
  }
  if (self.hasDeviceId) {
    [dictionary setObject: self.deviceId forKey: @"deviceId"];
  }
  if (self.hasDeviceToken) {
    [dictionary setObject: self.deviceToken forKey: @"deviceToken"];
  }
  if (self.hasApnsEnabled) {
    [dictionary setObject: [NSNumber numberWithInteger:self.apnsEnabled] forKey: @"apnsEnabled"];
  }
  if (self.hasLatesAppVers) {
    [dictionary setObject: self.latesAppVers forKey: @"latesAppVers"];
  }
  if (self.hasLocaleIdentifier) {
    [dictionary setObject: self.localeIdentifier forKey: @"localeIdentifier"];
  }
  if (self.hasLatitude) {
    [dictionary setObject: [NSNumber numberWithFloat:self.latitude] forKey: @"latitude"];
  }
  if (self.hasLongitude) {
    [dictionary setObject: [NSNumber numberWithFloat:self.longitude] forKey: @"longitude"];
  }
  if (self.hasCityId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.cityId] forKey: @"cityId"];
  }
  if (self.hasUserKind) {
    [dictionary setObject: [NSNumber numberWithInteger:self.userKind] forKey: @"userKind"];
  }
  if (self.hasUserDemo) {
    [dictionary setObject: [NSNumber numberWithInteger:self.userDemo] forKey: @"userDemo"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PAppSession class]]) {
    return NO;
  }
  PAppSession *otherMessage = other;
  return
      self.hasSessionId == otherMessage.hasSessionId &&
      (!self.hasSessionId || [self.sessionId isEqual:otherMessage.sessionId]) &&
      self.hasRealName == otherMessage.hasRealName &&
      (!self.hasRealName || [self.realName isEqual:otherMessage.realName]) &&
      self.hasUserName == otherMessage.hasUserName &&
      (!self.hasUserName || [self.userName isEqual:otherMessage.userName]) &&
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasSecret == otherMessage.hasSecret &&
      (!self.hasSecret || [self.secret isEqual:otherMessage.secret]) &&
      self.hasSigninDate == otherMessage.hasSigninDate &&
      (!self.hasSigninDate || [self.signinDate isEqual:otherMessage.signinDate]) &&
      self.hasProfileImageUrl == otherMessage.hasProfileImageUrl &&
      (!self.hasProfileImageUrl || [self.profileImageUrl isEqual:otherMessage.profileImageUrl]) &&
      self.hasAppName == otherMessage.hasAppName &&
      (!self.hasAppName || [self.appName isEqual:otherMessage.appName]) &&
      self.hasDeviceName == otherMessage.hasDeviceName &&
      (!self.hasDeviceName || [self.deviceName isEqual:otherMessage.deviceName]) &&
      self.hasDeviceScreenSize == otherMessage.hasDeviceScreenSize &&
      (!self.hasDeviceScreenSize || [self.deviceScreenSize isEqual:otherMessage.deviceScreenSize]) &&
      self.hasOsName == otherMessage.hasOsName &&
      (!self.hasOsName || [self.osName isEqual:otherMessage.osName]) &&
      self.hasOsVersion == otherMessage.hasOsVersion &&
      (!self.hasOsVersion || [self.osVersion isEqual:otherMessage.osVersion]) &&
      self.hasPackageVersion == otherMessage.hasPackageVersion &&
      (!self.hasPackageVersion || [self.packageVersion isEqual:otherMessage.packageVersion]) &&
      self.hasPackageName == otherMessage.hasPackageName &&
      (!self.hasPackageName || [self.packageName isEqual:otherMessage.packageName]) &&
      self.hasDeviceId == otherMessage.hasDeviceId &&
      (!self.hasDeviceId || [self.deviceId isEqual:otherMessage.deviceId]) &&
      self.hasDeviceToken == otherMessage.hasDeviceToken &&
      (!self.hasDeviceToken || [self.deviceToken isEqual:otherMessage.deviceToken]) &&
      self.hasApnsEnabled == otherMessage.hasApnsEnabled &&
      (!self.hasApnsEnabled || self.apnsEnabled == otherMessage.apnsEnabled) &&
      self.hasLatesAppVers == otherMessage.hasLatesAppVers &&
      (!self.hasLatesAppVers || [self.latesAppVers isEqual:otherMessage.latesAppVers]) &&
      self.hasLocaleIdentifier == otherMessage.hasLocaleIdentifier &&
      (!self.hasLocaleIdentifier || [self.localeIdentifier isEqual:otherMessage.localeIdentifier]) &&
      self.hasLatitude == otherMessage.hasLatitude &&
      (!self.hasLatitude || self.latitude == otherMessage.latitude) &&
      self.hasLongitude == otherMessage.hasLongitude &&
      (!self.hasLongitude || self.longitude == otherMessage.longitude) &&
      self.hasCityId == otherMessage.hasCityId &&
      (!self.hasCityId || self.cityId == otherMessage.cityId) &&
      self.hasUserKind == otherMessage.hasUserKind &&
      (!self.hasUserKind || self.userKind == otherMessage.userKind) &&
      self.hasUserDemo == otherMessage.hasUserDemo &&
      (!self.hasUserDemo || self.userDemo == otherMessage.userDemo) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSessionId) {
    hashCode = hashCode * 31 + [self.sessionId hash];
  }
  if (self.hasRealName) {
    hashCode = hashCode * 31 + [self.realName hash];
  }
  if (self.hasUserName) {
    hashCode = hashCode * 31 + [self.userName hash];
  }
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.userId] hash];
  }
  if (self.hasSecret) {
    hashCode = hashCode * 31 + [self.secret hash];
  }
  if (self.hasSigninDate) {
    hashCode = hashCode * 31 + [self.signinDate hash];
  }
  if (self.hasProfileImageUrl) {
    hashCode = hashCode * 31 + [self.profileImageUrl hash];
  }
  if (self.hasAppName) {
    hashCode = hashCode * 31 + [self.appName hash];
  }
  if (self.hasDeviceName) {
    hashCode = hashCode * 31 + [self.deviceName hash];
  }
  if (self.hasDeviceScreenSize) {
    hashCode = hashCode * 31 + [self.deviceScreenSize hash];
  }
  if (self.hasOsName) {
    hashCode = hashCode * 31 + [self.osName hash];
  }
  if (self.hasOsVersion) {
    hashCode = hashCode * 31 + [self.osVersion hash];
  }
  if (self.hasPackageVersion) {
    hashCode = hashCode * 31 + [self.packageVersion hash];
  }
  if (self.hasPackageName) {
    hashCode = hashCode * 31 + [self.packageName hash];
  }
  if (self.hasDeviceId) {
    hashCode = hashCode * 31 + [self.deviceId hash];
  }
  if (self.hasDeviceToken) {
    hashCode = hashCode * 31 + [self.deviceToken hash];
  }
  if (self.hasApnsEnabled) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.apnsEnabled] hash];
  }
  if (self.hasLatesAppVers) {
    hashCode = hashCode * 31 + [self.latesAppVers hash];
  }
  if (self.hasLocaleIdentifier) {
    hashCode = hashCode * 31 + [self.localeIdentifier hash];
  }
  if (self.hasLatitude) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.latitude] hash];
  }
  if (self.hasLongitude) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.longitude] hash];
  }
  if (self.hasCityId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cityId] hash];
  }
  if (self.hasUserKind) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.userKind] hash];
  }
  if (self.hasUserDemo) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.userDemo] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PAppSessionBuilder()
@property (strong) PAppSession* resultPappSession;
@end

@implementation PAppSessionBuilder
@synthesize resultPappSession;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPappSession = [[PAppSession alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPappSession;
}
- (PAppSessionBuilder*) clear {
  self.resultPappSession = [[PAppSession alloc] init];
  return self;
}
- (PAppSessionBuilder*) clone {
  return [PAppSession builderWithPrototype:resultPappSession];
}
- (PAppSession*) defaultInstance {
  return [PAppSession defaultInstance];
}
- (PAppSession*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PAppSession*) buildPartial {
  PAppSession* returnMe = resultPappSession;
  self.resultPappSession = nil;
  return returnMe;
}
- (PAppSessionBuilder*) mergeFrom:(PAppSession*) other {
  if (other == [PAppSession defaultInstance]) {
    return self;
  }
  if (other.hasSessionId) {
    [self setSessionId:other.sessionId];
  }
  if (other.hasRealName) {
    [self setRealName:other.realName];
  }
  if (other.hasUserName) {
    [self setUserName:other.userName];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasSecret) {
    [self setSecret:other.secret];
  }
  if (other.hasSigninDate) {
    [self setSigninDate:other.signinDate];
  }
  if (other.hasProfileImageUrl) {
    [self setProfileImageUrl:other.profileImageUrl];
  }
  if (other.hasAppName) {
    [self setAppName:other.appName];
  }
  if (other.hasDeviceName) {
    [self setDeviceName:other.deviceName];
  }
  if (other.hasDeviceScreenSize) {
    [self setDeviceScreenSize:other.deviceScreenSize];
  }
  if (other.hasOsName) {
    [self setOsName:other.osName];
  }
  if (other.hasOsVersion) {
    [self setOsVersion:other.osVersion];
  }
  if (other.hasPackageVersion) {
    [self setPackageVersion:other.packageVersion];
  }
  if (other.hasPackageName) {
    [self setPackageName:other.packageName];
  }
  if (other.hasDeviceId) {
    [self setDeviceId:other.deviceId];
  }
  if (other.hasDeviceToken) {
    [self setDeviceToken:other.deviceToken];
  }
  if (other.hasApnsEnabled) {
    [self setApnsEnabled:other.apnsEnabled];
  }
  if (other.hasLatesAppVers) {
    [self setLatesAppVers:other.latesAppVers];
  }
  if (other.hasLocaleIdentifier) {
    [self setLocaleIdentifier:other.localeIdentifier];
  }
  if (other.hasLatitude) {
    [self setLatitude:other.latitude];
  }
  if (other.hasLongitude) {
    [self setLongitude:other.longitude];
  }
  if (other.hasCityId) {
    [self setCityId:other.cityId];
  }
  if (other.hasUserKind) {
    [self setUserKind:other.userKind];
  }
  if (other.hasUserDemo) {
    [self setUserDemo:other.userDemo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PAppSessionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PAppSessionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSessionId:[input readString]];
        break;
      }
      case 18: {
        [self setRealName:[input readString]];
        break;
      }
      case 26: {
        [self setUserName:[input readString]];
        break;
      }
      case 32: {
        [self setUserId:[input readInt64]];
        break;
      }
      case 42: {
        [self setSecret:[input readString]];
        break;
      }
      case 50: {
        [self setSigninDate:[input readString]];
        break;
      }
      case 58: {
        [self setProfileImageUrl:[input readString]];
        break;
      }
      case 66: {
        [self setAppName:[input readString]];
        break;
      }
      case 74: {
        [self setDeviceName:[input readString]];
        break;
      }
      case 82: {
        [self setDeviceScreenSize:[input readString]];
        break;
      }
      case 90: {
        [self setOsName:[input readString]];
        break;
      }
      case 98: {
        [self setOsVersion:[input readString]];
        break;
      }
      case 106: {
        [self setPackageVersion:[input readString]];
        break;
      }
      case 114: {
        [self setPackageName:[input readString]];
        break;
      }
      case 122: {
        [self setDeviceId:[input readString]];
        break;
      }
      case 130: {
        [self setDeviceToken:[input readString]];
        break;
      }
      case 136: {
        [self setApnsEnabled:[input readInt32]];
        break;
      }
      case 146: {
        [self setLatesAppVers:[input readString]];
        break;
      }
      case 154: {
        [self setLocaleIdentifier:[input readString]];
        break;
      }
      case 165: {
        [self setLatitude:[input readFloat]];
        break;
      }
      case 173: {
        [self setLongitude:[input readFloat]];
        break;
      }
      case 176: {
        [self setCityId:[input readInt32]];
        break;
      }
      case 184: {
        [self setUserKind:[input readInt32]];
        break;
      }
      case 192: {
        [self setUserDemo:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSessionId {
  return resultPappSession.hasSessionId;
}
- (NSString*) sessionId {
  return resultPappSession.sessionId;
}
- (PAppSessionBuilder*) setSessionId:(NSString*) value {
  resultPappSession.hasSessionId = YES;
  resultPappSession.sessionId = value;
  return self;
}
- (PAppSessionBuilder*) clearSessionId {
  resultPappSession.hasSessionId = NO;
  resultPappSession.sessionId = @"";
  return self;
}
- (BOOL) hasRealName {
  return resultPappSession.hasRealName;
}
- (NSString*) realName {
  return resultPappSession.realName;
}
- (PAppSessionBuilder*) setRealName:(NSString*) value {
  resultPappSession.hasRealName = YES;
  resultPappSession.realName = value;
  return self;
}
- (PAppSessionBuilder*) clearRealName {
  resultPappSession.hasRealName = NO;
  resultPappSession.realName = @"";
  return self;
}
- (BOOL) hasUserName {
  return resultPappSession.hasUserName;
}
- (NSString*) userName {
  return resultPappSession.userName;
}
- (PAppSessionBuilder*) setUserName:(NSString*) value {
  resultPappSession.hasUserName = YES;
  resultPappSession.userName = value;
  return self;
}
- (PAppSessionBuilder*) clearUserName {
  resultPappSession.hasUserName = NO;
  resultPappSession.userName = @"";
  return self;
}
- (BOOL) hasUserId {
  return resultPappSession.hasUserId;
}
- (SInt64) userId {
  return resultPappSession.userId;
}
- (PAppSessionBuilder*) setUserId:(SInt64) value {
  resultPappSession.hasUserId = YES;
  resultPappSession.userId = value;
  return self;
}
- (PAppSessionBuilder*) clearUserId {
  resultPappSession.hasUserId = NO;
  resultPappSession.userId = 0L;
  return self;
}
- (BOOL) hasSecret {
  return resultPappSession.hasSecret;
}
- (NSString*) secret {
  return resultPappSession.secret;
}
- (PAppSessionBuilder*) setSecret:(NSString*) value {
  resultPappSession.hasSecret = YES;
  resultPappSession.secret = value;
  return self;
}
- (PAppSessionBuilder*) clearSecret {
  resultPappSession.hasSecret = NO;
  resultPappSession.secret = @"";
  return self;
}
- (BOOL) hasSigninDate {
  return resultPappSession.hasSigninDate;
}
- (NSString*) signinDate {
  return resultPappSession.signinDate;
}
- (PAppSessionBuilder*) setSigninDate:(NSString*) value {
  resultPappSession.hasSigninDate = YES;
  resultPappSession.signinDate = value;
  return self;
}
- (PAppSessionBuilder*) clearSigninDate {
  resultPappSession.hasSigninDate = NO;
  resultPappSession.signinDate = @"";
  return self;
}
- (BOOL) hasProfileImageUrl {
  return resultPappSession.hasProfileImageUrl;
}
- (NSString*) profileImageUrl {
  return resultPappSession.profileImageUrl;
}
- (PAppSessionBuilder*) setProfileImageUrl:(NSString*) value {
  resultPappSession.hasProfileImageUrl = YES;
  resultPappSession.profileImageUrl = value;
  return self;
}
- (PAppSessionBuilder*) clearProfileImageUrl {
  resultPappSession.hasProfileImageUrl = NO;
  resultPappSession.profileImageUrl = @"";
  return self;
}
- (BOOL) hasAppName {
  return resultPappSession.hasAppName;
}
- (NSString*) appName {
  return resultPappSession.appName;
}
- (PAppSessionBuilder*) setAppName:(NSString*) value {
  resultPappSession.hasAppName = YES;
  resultPappSession.appName = value;
  return self;
}
- (PAppSessionBuilder*) clearAppName {
  resultPappSession.hasAppName = NO;
  resultPappSession.appName = @"";
  return self;
}
- (BOOL) hasDeviceName {
  return resultPappSession.hasDeviceName;
}
- (NSString*) deviceName {
  return resultPappSession.deviceName;
}
- (PAppSessionBuilder*) setDeviceName:(NSString*) value {
  resultPappSession.hasDeviceName = YES;
  resultPappSession.deviceName = value;
  return self;
}
- (PAppSessionBuilder*) clearDeviceName {
  resultPappSession.hasDeviceName = NO;
  resultPappSession.deviceName = @"";
  return self;
}
- (BOOL) hasDeviceScreenSize {
  return resultPappSession.hasDeviceScreenSize;
}
- (NSString*) deviceScreenSize {
  return resultPappSession.deviceScreenSize;
}
- (PAppSessionBuilder*) setDeviceScreenSize:(NSString*) value {
  resultPappSession.hasDeviceScreenSize = YES;
  resultPappSession.deviceScreenSize = value;
  return self;
}
- (PAppSessionBuilder*) clearDeviceScreenSize {
  resultPappSession.hasDeviceScreenSize = NO;
  resultPappSession.deviceScreenSize = @"";
  return self;
}
- (BOOL) hasOsName {
  return resultPappSession.hasOsName;
}
- (NSString*) osName {
  return resultPappSession.osName;
}
- (PAppSessionBuilder*) setOsName:(NSString*) value {
  resultPappSession.hasOsName = YES;
  resultPappSession.osName = value;
  return self;
}
- (PAppSessionBuilder*) clearOsName {
  resultPappSession.hasOsName = NO;
  resultPappSession.osName = @"";
  return self;
}
- (BOOL) hasOsVersion {
  return resultPappSession.hasOsVersion;
}
- (NSString*) osVersion {
  return resultPappSession.osVersion;
}
- (PAppSessionBuilder*) setOsVersion:(NSString*) value {
  resultPappSession.hasOsVersion = YES;
  resultPappSession.osVersion = value;
  return self;
}
- (PAppSessionBuilder*) clearOsVersion {
  resultPappSession.hasOsVersion = NO;
  resultPappSession.osVersion = @"";
  return self;
}
- (BOOL) hasPackageVersion {
  return resultPappSession.hasPackageVersion;
}
- (NSString*) packageVersion {
  return resultPappSession.packageVersion;
}
- (PAppSessionBuilder*) setPackageVersion:(NSString*) value {
  resultPappSession.hasPackageVersion = YES;
  resultPappSession.packageVersion = value;
  return self;
}
- (PAppSessionBuilder*) clearPackageVersion {
  resultPappSession.hasPackageVersion = NO;
  resultPappSession.packageVersion = @"";
  return self;
}
- (BOOL) hasPackageName {
  return resultPappSession.hasPackageName;
}
- (NSString*) packageName {
  return resultPappSession.packageName;
}
- (PAppSessionBuilder*) setPackageName:(NSString*) value {
  resultPappSession.hasPackageName = YES;
  resultPappSession.packageName = value;
  return self;
}
- (PAppSessionBuilder*) clearPackageName {
  resultPappSession.hasPackageName = NO;
  resultPappSession.packageName = @"";
  return self;
}
- (BOOL) hasDeviceId {
  return resultPappSession.hasDeviceId;
}
- (NSString*) deviceId {
  return resultPappSession.deviceId;
}
- (PAppSessionBuilder*) setDeviceId:(NSString*) value {
  resultPappSession.hasDeviceId = YES;
  resultPappSession.deviceId = value;
  return self;
}
- (PAppSessionBuilder*) clearDeviceId {
  resultPappSession.hasDeviceId = NO;
  resultPappSession.deviceId = @"";
  return self;
}
- (BOOL) hasDeviceToken {
  return resultPappSession.hasDeviceToken;
}
- (NSString*) deviceToken {
  return resultPappSession.deviceToken;
}
- (PAppSessionBuilder*) setDeviceToken:(NSString*) value {
  resultPappSession.hasDeviceToken = YES;
  resultPappSession.deviceToken = value;
  return self;
}
- (PAppSessionBuilder*) clearDeviceToken {
  resultPappSession.hasDeviceToken = NO;
  resultPappSession.deviceToken = @"";
  return self;
}
- (BOOL) hasApnsEnabled {
  return resultPappSession.hasApnsEnabled;
}
- (SInt32) apnsEnabled {
  return resultPappSession.apnsEnabled;
}
- (PAppSessionBuilder*) setApnsEnabled:(SInt32) value {
  resultPappSession.hasApnsEnabled = YES;
  resultPappSession.apnsEnabled = value;
  return self;
}
- (PAppSessionBuilder*) clearApnsEnabled {
  resultPappSession.hasApnsEnabled = NO;
  resultPappSession.apnsEnabled = 0;
  return self;
}
- (BOOL) hasLatesAppVers {
  return resultPappSession.hasLatesAppVers;
}
- (NSString*) latesAppVers {
  return resultPappSession.latesAppVers;
}
- (PAppSessionBuilder*) setLatesAppVers:(NSString*) value {
  resultPappSession.hasLatesAppVers = YES;
  resultPappSession.latesAppVers = value;
  return self;
}
- (PAppSessionBuilder*) clearLatesAppVers {
  resultPappSession.hasLatesAppVers = NO;
  resultPappSession.latesAppVers = @"";
  return self;
}
- (BOOL) hasLocaleIdentifier {
  return resultPappSession.hasLocaleIdentifier;
}
- (NSString*) localeIdentifier {
  return resultPappSession.localeIdentifier;
}
- (PAppSessionBuilder*) setLocaleIdentifier:(NSString*) value {
  resultPappSession.hasLocaleIdentifier = YES;
  resultPappSession.localeIdentifier = value;
  return self;
}
- (PAppSessionBuilder*) clearLocaleIdentifier {
  resultPappSession.hasLocaleIdentifier = NO;
  resultPappSession.localeIdentifier = @"";
  return self;
}
- (BOOL) hasLatitude {
  return resultPappSession.hasLatitude;
}
- (Float32) latitude {
  return resultPappSession.latitude;
}
- (PAppSessionBuilder*) setLatitude:(Float32) value {
  resultPappSession.hasLatitude = YES;
  resultPappSession.latitude = value;
  return self;
}
- (PAppSessionBuilder*) clearLatitude {
  resultPappSession.hasLatitude = NO;
  resultPappSession.latitude = 0;
  return self;
}
- (BOOL) hasLongitude {
  return resultPappSession.hasLongitude;
}
- (Float32) longitude {
  return resultPappSession.longitude;
}
- (PAppSessionBuilder*) setLongitude:(Float32) value {
  resultPappSession.hasLongitude = YES;
  resultPappSession.longitude = value;
  return self;
}
- (PAppSessionBuilder*) clearLongitude {
  resultPappSession.hasLongitude = NO;
  resultPappSession.longitude = 0;
  return self;
}
- (BOOL) hasCityId {
  return resultPappSession.hasCityId;
}
- (SInt32) cityId {
  return resultPappSession.cityId;
}
- (PAppSessionBuilder*) setCityId:(SInt32) value {
  resultPappSession.hasCityId = YES;
  resultPappSession.cityId = value;
  return self;
}
- (PAppSessionBuilder*) clearCityId {
  resultPappSession.hasCityId = NO;
  resultPappSession.cityId = 0;
  return self;
}
- (BOOL) hasUserKind {
  return resultPappSession.hasUserKind;
}
- (SInt32) userKind {
  return resultPappSession.userKind;
}
- (PAppSessionBuilder*) setUserKind:(SInt32) value {
  resultPappSession.hasUserKind = YES;
  resultPappSession.userKind = value;
  return self;
}
- (PAppSessionBuilder*) clearUserKind {
  resultPappSession.hasUserKind = NO;
  resultPappSession.userKind = 0;
  return self;
}
- (BOOL) hasUserDemo {
  return resultPappSession.hasUserDemo;
}
- (SInt32) userDemo {
  return resultPappSession.userDemo;
}
- (PAppSessionBuilder*) setUserDemo:(SInt32) value {
  resultPappSession.hasUserDemo = YES;
  resultPappSession.userDemo = value;
  return self;
}
- (PAppSessionBuilder*) clearUserDemo {
  resultPappSession.hasUserDemo = NO;
  resultPappSession.userDemo = 0;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
